{"version":3,"sources":["dashboard-components/modals/AddTask/helper/index.js","dashboard-components/modals/AddTask/index.js"],"names":["handleTasks","formData","editTask","a","taskData","setLoading","setShowModal","addNewTask","edit","newTaskData","editATask","createATask","response","notifyUser","status","data","show","AddTask","useForm","register","handleSubmit","errors","useState","loading","currentCollection","useContext","TasksContext","className","onSubmit","collectionId","FormGroup","title","htmlFor","ref","required","type","name","defaultValue","description","message","rows","Button","variant","block","size","disabled","Spinner","animation","role","aria-hidden"],"mappings":"oNAGaA,EAAW,uCAAG,WACzBC,EACAC,GAFyB,uCAAAC,EAAA,yDAGzBC,EAHyB,+BAGd,GACXC,EAJyB,uBAKzBC,EALyB,uBAMzBC,EANyB,uBAOzBC,EAPyB,uBASzBH,GAAW,GACLI,EAVmB,2BAWpBL,GACAH,IAEYC,EAdQ,kCAefQ,YAAUD,GAfK,6DAgBfE,YAAYF,GAhBG,gCAcnBG,EAdmB,OAiBbP,GAAW,GACvBO,GAAYC,YAAWD,IACnBA,IAAYA,EAASE,OAnBA,wBAoBvBZ,EAAWM,EAAKI,EAASG,MAAQR,EAAWK,EAASG,MApB9B,kBAqBhBT,EAAa,CAClBU,MAAM,KAtBe,4CAAH,wD,QCwFTC,UArFC,SAAC,GAA4B,IAA1BX,EAAyB,EAAzBA,aAAcS,EAAW,EAAXA,KAAW,EACCG,cAAnCC,EADkC,EAClCA,SAAUC,EADwB,EACxBA,aAAcC,EADU,EACVA,OADU,EAEZC,oBAAS,GAFG,mBAEnCC,EAFmC,KAE1BlB,EAF0B,OAGqBU,EAAvDb,gBAHkC,WAGqBa,EAArCX,gBAHgB,MAGL,GAHK,EAGDoB,EAAsBT,EAAtBS,kBAHC,EAKRC,qBAAWC,KAArCnB,EALkC,EAKlCA,WAAYG,EALsB,EAKtBA,UAcpB,OACE,oCACE,wBAAIiB,UAAU,oBACX,IACAzB,EAAW,YAAc,aAG5B,0BAAM0B,SAAUR,GAnBL,SAACnB,GACd,OAAOD,EAAY,2BACZC,GADW,IACD4B,aAAcL,IAC7BtB,EACAE,EACAC,EACAC,EACAC,EACAG,OAYE,kBAACoB,EAAA,EAAD,KACE,2BACEH,UAAWN,EAAOU,MAAQ,cAAgB,QAC1CC,QAAQ,UAFV,SAMA,2BACEC,IAAKd,EAAS,CAAEe,UAAU,IAC1BP,UAAU,eACVQ,KAAK,OACLC,KAAK,QACLC,aAAY,OAAEjC,QAAF,IAAEA,OAAF,EAAEA,EAAU2B,SAG5B,kBAACD,EAAA,EAAD,KACE,2BACEH,UAAWN,EAAOiB,YAAc,cAAgB,QAChDN,QAAQ,eAEPX,EAAOkB,QAAP,0BAA6C,eAEhD,8BACEN,IAAKd,EAAS,CAAEe,UAAU,IAC1BM,KAAK,KACLb,UAAU,eACVS,KAAK,cACLC,aAAY,OAAEjC,QAAF,IAAEA,OAAF,EAAEA,EAAUkC,eAI5B,kBAACG,EAAA,EAAD,CACEC,QAAQ,UACRC,OAAO,EACPC,KAAM,KACNT,KAAK,SACLU,SAAUtB,EACVI,UAAU,SAERJ,GAAW,kCAAQrB,EAAW,YAAc,aAE7CqB,GACC,kBAACuB,EAAA,EAAD,CACEC,UAAU,SACVH,KAAK,KACLI,KAAK,SACLC,eAAa,EACbtB,UAAU,kBAEV,0BAAMA,UAAU,WAAhB","file":"static/js/5.184515ee.chunk.js","sourcesContent":["import { notifyUser } from \"../../../../util/helper-functions\";\nimport { createATask, editATask } from \"../../../../util/operations/tasks\";\n\nexport const handleTasks = async (\n  formData,\n  editTask,\n  taskData = {},\n  setLoading,\n  setShowModal,\n  addNewTask,\n  edit\n) => {\n  setLoading(true);\n  const newTaskData = {\n    ...taskData,\n    ...formData,\n  };\n  const response = editTask\n    ? await editATask(newTaskData)\n    : await createATask(newTaskData);\n  response && setLoading(false);\n  response && notifyUser(response);\n  if (response && response.status) {\n    editTask ? edit(response.data) : addNewTask(response.data);\n    return setShowModal({\n      show: false,\n    });\n  }\n};\n","import React, { useContext, useState } from \"react\";\nimport { FormGroup, Button, Spinner } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { handleTasks } from \"./helper\";\nimport { Context as TasksContext } from \"../../../context/tasksContext\";\n\nconst AddTask = ({ setShowModal, data }) => {\n  const { register, handleSubmit, errors } = useForm();\n  const [loading, setLoading] = useState(false);\n  const { editTask = false, taskData = {}, currentCollection } = data;\n\n  const { addNewTask, editATask } = useContext(TasksContext);\n\n  const submit = (formData) => {\n    return handleTasks(\n      { ...formData, collectionId: currentCollection },\n      editTask,\n      taskData,\n      setLoading,\n      setShowModal,\n      addNewTask,\n      editATask\n    );\n  };\n\n  return (\n    <>\n      <h5 className=\"text-center mb-3\">\n        {\" \"}\n        {editTask ? \"Edit Task\" : \"Add Task \"}\n      </h5>\n\n      <form onSubmit={handleSubmit(submit)}>\n        <FormGroup>\n          <label\n            className={errors.title ? \"error-label\" : \"label\"}\n            htmlFor=\"Title \"\n          >\n            Title\n          </label>\n          <input\n            ref={register({ required: true })}\n            className=\"form-control\"\n            type=\"text\"\n            name=\"title\"\n            defaultValue={taskData?.title}\n          />\n        </FormGroup>\n        <FormGroup>\n          <label\n            className={errors.description ? \"error-label\" : \"label\"}\n            htmlFor=\"Description\"\n          >\n            {errors.message ? `Description is required` : \"Description\"}\n          </label>\n          <textarea\n            ref={register({ required: true })}\n            rows=\"10\"\n            className=\"form-control\"\n            name=\"description\"\n            defaultValue={taskData?.description}\n          />\n        </FormGroup>\n\n        <Button\n          variant=\"primary\"\n          block={true}\n          size={\"md\"}\n          type=\"submit\"\n          disabled={loading}\n          className=\"mt-4\"\n        >\n          {!loading && <span> {editTask ? \"Edit Task\" : \"Add Task \"}</span>}\n\n          {loading && (\n            <Spinner\n              animation=\"border\"\n              size=\"sm\"\n              role=\"status\"\n              aria-hidden={true}\n              className=\"align-baseline\"\n            >\n              <span className=\"sr-only\">Loading...</span>\n            </Spinner>\n          )}\n        </Button>\n      </form>\n    </>\n  );\n};\n\nexport default AddTask;\n"],"sourceRoot":""}