{"version":3,"sources":["../node_modules/react-bootstrap/esm/Badge.js","dashboard-components/modals/ViewTask/index.js"],"names":["Badge","React","forwardRef","_ref","ref","bsPrefix","variant","pill","className","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","ViewTask","setShowModal","data","task","handleDeleteTask","onClick","modalId","EDIT_TASK","taskData","editTask","show","src","editIcon","alt","deleteIcon","completed","title","description","Button"],"mappings":"2OAQIA,EAAQC,IAAMC,YAAW,SAAUC,EAAMC,GAC3C,IAAIC,EAAWF,EAAKE,SAChBC,EAAUH,EAAKG,QACfC,EAAOJ,EAAKI,KACZC,EAAYL,EAAKK,UACjBC,EAAUN,EAAKO,GACfC,OAAwB,IAAZF,EAAqB,OAASA,EAC1CG,EAAQC,YAA8BV,EAAM,CAAC,WAAY,UAAW,OAAQ,YAAa,OAEzFW,EAASC,YAAmBV,EAAU,SAC1C,OAAOJ,IAAMe,cAAcL,EAAWM,YAAS,CAC7Cb,IAAKA,GACJQ,EAAO,CACRJ,UAAWU,IAAWV,EAAWM,EAAQP,GAAQO,EAAS,QAASR,GAAWQ,EAAS,IAAMR,SAGjGN,EAAMmB,YAAc,QACpBnB,EAAMoB,aApBa,CACjBb,MAAM,GAoBOP,Q,SC2BAqB,UA9CE,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,KACxBC,EAA2BD,EAA3BC,KAA2BD,EAArBE,iBACd,OACE,6BAASjB,UAAU,wBACjB,0BAAMA,UAAU,0BACd,yBACEkB,QAAS,kBACPJ,EAAa,CACXK,QAASC,IACTL,KAAM,CACJM,SAAUL,EACVM,UAAU,GAEZC,MAAM,KAGVC,IAAKC,IACLzB,UAAU,cACV0B,IAAI,cAEN,yBACER,QAAS,iBAAM,IACfM,IAAKG,IACL3B,UAAU,cACV0B,IAAI,iBAGR,wBAAI1B,UAAU,oBAAd,gBACA,yBAAKA,UAAU,eACb,kBAAC,EAAD,CAAOF,QAASkB,EAAKY,UAAY,UAAY,QAC1C,IACAZ,EAAKY,UAAY,WAAa,UAAW,MAG9C,yBAAK5B,UAAU,cACb,wBAAIA,UAAU,eAAegB,EAAKa,MAAlC,KACA,uBAAG7B,UAAU,qBAAqBgB,EAAKc,YAAvC,KACA,kBAACC,EAAA,EAAD,CAAQ/B,UAAU,YAAYF,QAAQ,WACnC,IACAkB,EAAKY,UAAY,kBAAoB,oBAAqB","file":"static/js/3.5de8a2f1.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import React from \"react\";\nimport \"./styles.scss\";\nimport editIcon from \"../../../assets/icons/edit.png\";\nimport deleteIcon from \"../../../assets/icons/delete.png\";\nimport { EDIT_TASK } from \"../../../util/constants\";\nimport { Badge, Button } from \"react-bootstrap\";\n\nconst ViewTask = ({ setShowModal, data }) => {\n  const { task, handleDeleteTask } = data;\n  return (\n    <section className=\"task-details-section\">\n      <span className=\"edit-task-icon-section\">\n        <img\n          onClick={() =>\n            setShowModal({\n              modalId: EDIT_TASK,\n              data: {\n                taskData: task,\n                editTask: true,\n              },\n              show: true,\n            })\n          }\n          src={editIcon}\n          className=\"action-icon\"\n          alt=\"Edit Icon\"\n        />\n        <img\n          onClick={() => \"\"}\n          src={deleteIcon}\n          className=\"action-icon\"\n          alt=\"Delete Icon\"\n        />\n      </span>\n      <h5 className=\"text-center mb-3\">Task Details</h5>\n      <div className=\"text-center\">\n        <Badge variant={task.completed ? \"success\" : \"dark\"}>\n          {\" \"}\n          {task.completed ? \"Complete\" : \"Pending\"}{\" \"}\n        </Badge>\n      </div>\n      <div className=\"task__body\">\n        <h6 className=\"task__title\">{task.title} </h6>\n        <p className=\"task__description\">{task.description} </p>\n        <Button className=\"btn-block\" variant=\"primary\">\n          {\" \"}\n          {task.completed ? \"Mark as Pending\" : \"Mark as Completed\"}{\" \"}\n        </Button>\n      </div>\n    </section>\n  );\n};\n\nexport default ViewTask;\n"],"sourceRoot":""}